# =============================================================================
# LeadHub Service - NGINX Server Configuration
# =============================================================================
# This configuration demonstrates why NGINX is ESSENTIAL in production:
#
# üõ°Ô∏è  SECURITY BENEFITS:
# - SSL/TLS termination with modern cipher suites
# - Request filtering and validation
# - Rate limiting and DDoS protection
# - Security headers enforcement
# - Input sanitization
#
# ‚ö° PERFORMANCE BENEFITS:
# - Load balancing across multiple API instances
# - Connection pooling and keep-alive
# - Gzip compression for reduced bandwidth
# - Static file serving without hitting the API
# - Response caching for improved latency
#
# üîß OPERATIONAL BENEFITS:
# - Health check integration
# - Graceful failover between instances
# - Zero-downtime deployments
# - Centralized logging and monitoring
# - SSL certificate management

# HTTP server (redirects to HTTPS)
server {
    listen 80;
    server_name leadhub.tech www.leadhub.tech;
    
    # Security: Always redirect to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server (main configuration)
server {
    listen 443 ssl http2;
    server_name leadhub.tech www.leadhub.tech;
    
    # =============================================================================
    # SSL/TLS Configuration (SECURITY LAYER)
    # =============================================================================
    ssl_certificate /etc/nginx/ssl/leadhub.tech.crt;
    ssl_certificate_key /etc/nginx/ssl/leadhub.tech.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # =============================================================================
    # Security Headers (ENTERPRISE SECURITY)
    # =============================================================================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self'; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
    
    # =============================================================================
    # Rate Limiting (DDOS PROTECTION)
    # =============================================================================
    # Apply rate limiting to API endpoints
    location /v1/ {
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        # Forward to API instances with load balancing
        proxy_pass http://leadhub_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Connection settings for better performance
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Health check integration
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }
    
    # Special rate limiting for authentication endpoints
    location /v1/api/authentication {
        limit_req zone=auth burst=5 nodelay;
        limit_conn conn_limit_per_ip 10;
        
        proxy_pass http://leadhub_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # =============================================================================
    # Health Check Endpoint (MONITORING)
    # =============================================================================
    location /v1/health {
        access_log off; # Don't log health checks
        proxy_pass http://leadhub_api;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for health checks
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;
    }
    
    # =============================================================================
    # Static File Serving (PERFORMANCE OPTIMIZATION)
    # =============================================================================
    # Serve static files directly without hitting the API
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # =============================================================================
    # Security: Block common attack patterns
    # =============================================================================
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ /\.(sql|git|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block requests to admin paths (if not using admin API)
    location ~ ^/admin {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # =============================================================================
    # Error Pages
    # =============================================================================
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# =============================================================================
# NGINX Status for Monitoring (Internal Access Only)
# =============================================================================
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
